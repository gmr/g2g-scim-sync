# Example configuration for g2g-scim-sync
# Copy to config.toml and update with your settings

[google]
# Path to your Google service account JSON file
service_account_file = "path/to/service-account.json"

# Your Google Workspace domain
domain = "company.com"

# List of Google Workspace Organizational Units to synchronize
organizational_units = ["/Engineering", "/Operations"]

# List of individual user emails to sync (outside of OUs) - optional
individual_users = ["contractor1@company.com", "consultant@company.com"]

# Admin user email for Google Workspace domain delegation
subject_email = "admin@company.com"

[github]
# Your GitHub Enterprise base URL
enterprise_url = "https://github.company.com"

# GitHub SCIM API token (provided by GitHub Enterprise admin)
scim_token = "ghes_token_here"

# Target GitHub organization
organization = "company-org"

# List of user emails who should be assigned the enterprise_owner role
enterprise_owners = ["ceo@company.com", "cto@company.com"]

# List of user emails who should be assigned the billing_manager role
billing_managers = ["finance@company.com", "billing@company.com"]

# List of user emails who should be assigned the guest_collaborator role
guest_collaborators = ["contractor@external.com", "consultant@partner.com"]

[sync]
# Delete suspended users instead of just deactivating them
delete_suspended = false

# Automatically create missing GitHub teams
# Set to false if your GitHub Enterprise instance manages teams through IdP instead of SCIM API
create_teams = true

# Flatten nested Organizational Units into individual GitHub teams
flatten_ous = true

[logging]
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
level = "INFO"

# Optional log file path (comment out to log only to console)
file = "g2g-scim-sync.log"
